list.of.packages <- c("rmarkdown","revealjs","dplyr","tidyr","xtable","ggvis","ggplot2", "Rcpp","fitdistrplus")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(dplyr)
library(tidyr)
library(xtable)
library(ggvis)
library(ggplot2)
library(fitdistrplus)
set.seed(100)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
head(norm_data)
summarise(norm_data)
summary(norm_data)
summary(norm_data)
norm_data
summary(norm_data)
allProp(norm_data)
allProp = function(x){ data.frame(mean = mean(x),var = var(x),asm = sum((x-mean(x))^3)/length(x)/var(x)^(3/2),exc = sum((x-mean(x))^4)/length(x)/var(x)^2-3)}
allProp(norm_data)
allProp(norm_data$x)
summary(norm_data)
str(summary(norm_data))
summary(norm_data)
allProp(norm_data$x)
summary(norm_data$x)
bindN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(rnorm, c(params,x))});
}
genN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(rnorm, c(params,x))});
}
genN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(rnorm, c(params,x))});
}
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(rnorm, c(params,x))});
}
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))});
}
generateN(sizeN,paramN)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
paramN = list(mean = 0, sd = 1)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))});
}
generateN(sizeN,paramN)
generateN <- function(size,params,FUN=rnorm){
(sapply(size,function(x){do.call(FUN, c(params,x))})) %>% as.data.frame
}
generateN(sizeN,paramN)
generateN <- function(size,params,FUN=rnorm){
(sapply(size,function(x){do.call(FUN, c(params,x))})) %>% as.data.frame
}
generateN(sizeN,paramN)
generateN
generateN(sizeN,paramN)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))}) %>% as.data.frame
}
generateN(sizeN,paramN)
sapply(size,function(x){do.call(FUN, c(params,x))}) %>% as.data.frame
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))}) %>% as.data.frame
}
generateN(sizeN,paramN)
paramN = list(mean = -10, sd = 10)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))}) %>% as.data.frame
}
generateN(sizeN,paramN)
paramN = list(mean = -10, sd = 100)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))}) %>% as.data.frame
}
generateN(sizeN,paramN)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
generateN(sizeN,paramN)
temp = generateN(sizeN,paramN)
temp$x10
rbind(norm_data,generateN(sizeN,paramN))
c(norm_data,generateN(sizeN,paramN))
norm_data = c(norm_data,generateN(sizeN,paramN))
norm_data
set.seed(100)
allProp = function(x){ data.frame(mean = mean(x),var = var(x),asm = sum((x-mean(x))^3)/length(x)/var(x)^(3/2),exc = sum((x-mean(x))^4)/length(x)/var(x)^2-3)}
set.seed(100)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
paramN = list(mean = -10, sd = 100)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data = c(norm_data,generateN(sizeN,paramN))
summary(norm_data)
summary(norm_data)
sapply(norm_data,summary)
sapply(norm_data,allProp)
paramN = list(mean = -23, sd = 100)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
paramN = list(mean = -23, sd = 100)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data = c(norm_data,generateN(sizeN,paramN))
temp$x10
sapply(norm_data,summary)
sapply(norm_data,allProp)
paramN = list(mean = -23, sd = 0.001)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
paramN = list(mean = -23, sd = 0.001)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
epsilon = c(10, 0.1, 0.01)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data = c(norm_data,generateN(sizeN,paramN))
temp$x10
sapply(norm_data,summary)
sapply(norm_data,allProp)
paramN = list(mean = -23, sd = 0.1)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data = c(norm_data,generateN(sizeN,paramN))
temp$x10
sapply(norm_data,summary)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
paramN = list(mean = -23, sd = 0.1)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data = c(norm_data,generateN(sizeN,paramN))
temp$x10
sapply(norm_data,summary)
paramN = list(mean = -23, sd = 3)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data = c(norm_data,generateN(sizeN,paramN))
temp$x10
sapply(norm_data,summary)
paramN = list(mean = -23, sd = 10)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
temp$x10
norm_data = c(norm_data,generateN(sizeN,paramN))
sapply(norm_data,summary)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
paramN = list(mean = -23, sd = 5)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
epsilon_for_binom = c(0.2, 0.1, 0.01)
generateN <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
temp$x10
norm_data = c(norm_data,generateN(sizeN,paramN))
sapply(norm_data,summary)
sapply(norm_data,allProp)
bern_data = rgenerate(sizeB,paramB,rbinom)
allProp = function(x){ data.frame(mean = mean(x),var = var(x),asm = sum((x-mean(x))^3)/length(x)/var(x)^(3/2),exc = sum((x-mean(x))^4)/length(x)/var(x)^2-3)}
rgenerate <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
set.seed(100)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
paramN = list(mean = -23, sd = 5)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
epsilon_for_bern = c(0.2, 0.1, 0.01)
paramN = list(prob =  1/10)
sizeN = list(x100=100)
paramN = list(mean = -23, sd = 5)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
paramB = list(prob =  1/10)
sizeB = list(x100=100)
norm_data = c(norm_data,rgenerate(sizeN,paramN))
bern_data = rgenerate(sizeB,paramB,rbinom)
seq(0, 1111, by = 20)
require(graphics)
sum(dbinom(46:54, 100, 0.5))
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
lines(k, log(dbinom(k, n, pi/10)), col = "red", lwd = 2)
mtext("dbinom(k, log=TRUE)", adj = 0)
mtext("extended range", adj = 0, line = -1, font = 4)
mtext("log(dbinom(k))", col = "red", adj = 1)
dbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 100, 0.5)
rbinom(46:54, 200, 0.5)
n <- 2000
k <- seq(0, n, by = 20)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.5)
rbinom(46:54, 200, 0.1)
rbinom(46:54, 200, 0.1)
rbinom(46:54, 200, 0.1)
rbinom(46:54, 200, 0.1)
rbinom(46:54, 200, 0.1)
rbinom(46:54, 200, 0.1)
rbinom(46:54, 20, 0.1)
rbinom(46:54, 20, 0.1)
rbinom(1, 20, 0.1)
rbinom(1, 20, 0.1)
rbinom(1, 20, 0.1)
sum(dbinom(46:54, 100, 0.5))
rbinom(1, 20, 0.1)
paramB = list(size = 10,prob =  1/10)
sizeB = list(x100=100)
norm_data = c(norm_data,rgenerate(sizeN,paramN))
bern_data = rgenerate(sizeB,paramB,rbinom)
bern_data
sizeB = list(x100=1001)
bern_data = rgenerate(sizeB,paramB,rbinom)
bern_data
paramB = list(size = 100,prob =  1/10)
sizeB = list()
bern_data = rgenerate(sizeB,paramB,rbinom)
bern_data
bern_data
bern_data
bern_data
paramB = list(prob =  1/10)
sizeB = list(size = 100)
bern_data = rgenerate(sizeB,paramB,rbinom)
paramB = list(size = 100, prob =  1/10)
sizeB = list(x100=100)
bern_data = rgenerate(sizeB,paramB,rbinom)
bern_data
sum(bern_data)
bern_data = rgenerate(sizeB,paramB,rbinom)
sum(bern_data)
paramB = list(size = 1, prob =  1/10)
sizeB = list(x100=100)
sum(bern_data)
bern_data = rgenerate(sizeB,paramB,rbinom)
sum(bern_data)
bern_data = rgenerate(sizeB,paramB,rbinom)
sum(bern_data)
bern_data
sum(bern_data)
paramB = list(size = 1, prob =  1/10)
sizeB = list(x100=100)
norm_data = c(norm_data,rgenerate(sizeN,paramN))
bern_data = rgenerate(sizeB,paramB,rbinom)
sum(bern_data)
norm_data
allProp = function(x){ data.frame(mean = mean(x),var = var(x),asm = sum((x-mean(x))^3)/length(x)/var(x)^(3/2),exc = sum((x-mean(x))^4)/length(x)/var(x)^2-3)}
rgenerate <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
set.seed(100)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
paramN = list(mean = -23, sd = 5)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
epsilon_for_bern = c(0.2, 0.1, 0.01)
paramB = list(size = 1, prob =  1/10)
sizeB = list(x100=100)
norm_data = c(norm_data,rgenerate(sizeN,paramN))
bern_data = rgenerate(sizeB,paramB,rbinom)
sum(bern_data)
bern_data
norm_data
sapply(norm_data,summary)
sapply(norm_data,allProp)
library(nortest)
install.packages(nortest)
install.packages("nortest")
library(normtest)
install.packages("nortest")
library(normtest)
jb.norm.test(speed)
install.packages("nortest")
allProp = function(x){ data.frame(mean = mean(x),var = var(x),asm = sum((x-mean(x))^3)/length(x)/var(x)^(3/2),exc = sum((x-mean(x))^4)/length(x)/var(x)^2-3)}
rgenerate <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
set.seed(100)
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
allProp = function(x){ data.frame(mean = mean(x),var = var(x),asm = sum((x-mean(x))^3)/length(x)/var(x)^(3/2),exc = sum((x-mean(x))^4)/length(x)/var(x)^2-3)}
rgenerate <- function(size,params,FUN=rnorm){
sapply(size,function(x){do.call(FUN, c(params,x))})
}
norm_data=as.data.frame(read.csv("51_norm_-23.798434.csv",col.names = c("x")));
set.seed(100)
a = c(0.25, 0.1, 0.05, 0.01, 0.001)
epsilon = c(10, 0.1, 0.01)
paramN = list(mean = -23, sd = 5)
sizeN = list(x10 = 10,x100=100,x1000=1000,x10000=10000)
epsilon_for_bern = c(0.2, 0.1, 0.01)
paramB = list(size = 1, prob =  1/10)
sizeB = list(x100=100)
norm_data = c(norm_data,rgenerate(sizeN,paramN))
bern_data = rgenerate(sizeB,paramB,rbinom)
sum(bern_data)
sapply(norm_data,summary)
sapply(norm_data,allProp)
