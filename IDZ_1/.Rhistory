freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rG Гистограмма, с кривой плотности"
);
lines(density(rG), col = "red", lwd = 2);
lines(x = ranges$G, y = densitys$G, col = "green", lwd = 2);
}
{
hist(rN,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rN Гистограмма, с кривой плотности"
);
lines(density(rN), col = "red", lwd = 2);
lines(x = ranges$N, y = densitys$N, col = "green", lwd = 2);
}
{
hist(rNB,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "NB Гистограмма, с кривой плотности"
);
lines(density(rNB), col = "red", lwd = 2);
lines(x = ranges$NB, y = densitys$NB, col = "green", lwd = 2);
}
}
hist3();
hist(rG,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rG Гистограмма, с кривой плотности"
);
hist(rN,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rN Гистограмма, с кривой плотности"
);
hist3 <- function(){
{
hist(rG,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rG Гистограмма, с кривой плотности"
);
lines(density(rG), col = "red", lwd = 2);
lines(x = ranges$G, y = densitys$G, col = "green", lwd = 2);
}
{
hist(rN,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rN Гистограмма, с кривой плотности"
);
lines(density(rN), col = "red", lwd = 2);
lines(x = ranges$N, y = densitys$N, col = "green", lwd = 2);
}
{
hist(rNB,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "NB Гистограмма, с кривой плотности"
);
lines(density(rNB), col = "red", lwd = 2);
lines(x = ranges$NB, y = densitys$NB, col = "green", lwd = 2);
}
}
hist3();
hist3();
hist3();
ranges <- list(G = (((range(rG)[1]*100):(range(rG)[2]*100))/100),
N = (((range(rN)[1]*100):(range(rN)[2]*100))/100),
NB = range(rNB)[1]:range(rNB)[2]
);
densitys <- list(G = dgamma(x = ranges$G,
shape = 10, rate = 5.3),
N = dnorm(x = ranges$N,
mean = 2.3, sd = 0.3),
NB = dnbinom(x = ranges$NB,
size = 32,prob = 1/5))
hist3 <- function(){
{
hist(rG,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rG Гистограмма, с кривой плотности"
);
lines(density(rG), col = "red", lwd = 2);
lines(x = ranges$G, y = densitys$G, col = "green", lwd = 2);
}
{
hist(rN,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rN Гистограмма, с кривой плотности"
);
lines(density(rN), col = "red", lwd = 2);
lines(x = ranges$N, y = densitys$N, col = "green", lwd = 2);
}
{
hist(rNB,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "NB Гистограмма, с кривой плотности"
);
lines(density(rNB), col = "red", lwd = 2);
lines(x = ranges$NB, y = densitys$NB, col = "green", lwd = 2);
}
}
hist3();
means <- c(G = mean(rG), N = mean(rN), NB = mean(rNB));
vars <- c(G = var(rG), N = var(rN), NB = var(rNB));
asms <- c(G = asm(rG), N = asm(rN), NB = asm(rNB));
excs <- c(G = exc(rG), N = exc(rN), NB = exc(rNB));
f
mean = 2.3; sd = 0.3
size = 32;prob = 1/5
rbind(dG = allProp(rG) - c(mean = shape/k, var= shape/k^2,asm = 0.5332323,exc = 0.38232323),
dN = allProp(rN) - c(mean = mean, var= sd^2,asm = 0.05003010,exc = 0.019126277),
dNB = allProp(rNB) - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
meansReal <- c(G = mean(funP$G(ranges$G)), N = mean(funP$N(ranges$N)), NB = mean(funP$NB(ranges$N)));
meansReal
meansReal <- c(G = mean(funP$G(ranges$G)), N = mean(funP$N(ranges$N)), NB = mean(funP$NB(ranges$N)));
varsReal <- c(G = var(funP$G(ranges$G)), N = var(funP$N(ranges$N)), NB = var(funP$NB(ranges$N)));
asmsReal <- c(G = asm(funP$G(ranges$G)), N = asm(funP$N(ranges$N)), NB = asm(funP$NB(ranges$N)));
excsReal <- c(G = exc(funP$G(ranges$G)), N = exc(funP$N(ranges$N)), NB = exc(funP$NB(ranges$N)));
t <- ?data.frame(meansReal,means,
varsReal,vars,
asmsReal,asms,
excsReal,excs)
t
t <- data.frame(meansReal,means,
varsReal,vars,
asmsReal,asms,
excsReal,excs)
t
meansReal
funP
allProp(rG)
sapply(list(rG,N,NB) ,allProp)
N
sapply(list(rG,rN,rNB) ,allProp)
list(rG,rN,rNB)
sapply(list(rG=rG,rN=rN,rNB=rNB),allProp)
distributions <<- list(rG=rG,rN=rN,rNB=rNB)
lapply(distributions,FUN = empiricalPlot)
sapply(distributions,allProp)
propG = list(shape = 10, rate = 5.3);
propN = list(mean = 2.3, sd = 0.3);
propNB = list(size = 32,prob = 1/5);
k
plot.ecdf(AnnualDiameter$AnnualDiameter);
empiricalPlot(AnnualDiameter$AnnualDiameter);
plot.ecdf(AnnualDiameter$AnnualDiameter);
sapply(distributions,allProp)
c(mean = shape/k, var= shape/k^2,asm = 0.5332323,exc = 0.38232323)
c(mean = shape/propG$rate, var= shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323
c(mean = shape/propG$rate, var= shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323)
c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323)
sapply(distributions,allProp)
rbind(dG = allProp(rG) - c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
dN = allProp(rN) - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
dNB = allProp(rNB) - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
rbind(dG = c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
dN = c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
dNB = c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
sapply(distributions,allProp)
t(rbind(dG = c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
dN = c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
dNB = c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634)))
t(rbind(dG = c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
dN = c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
dNB = c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634)))
sapply(distributions,allProp)
sapply(distributions,allProp)
t(rbind(rG = c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634)))
distributions
distributions$Prop = sapply(distributions,allProp)
distributions$prop = sapply(distributions,allProp)
distributions$prop = sapply(distributions,allProp)
distributions$prop =
sapply(distributions,allProp)
sapply(distributions,allProp)
exc<<-function(x){
sum((x-mean(x))^4)/length(x)/var(x)^2-3;
}
asm <<- function(x){
sum((x-mean(x))^3)/length(x)/var(x)^(3/2)
}
allProp <<- function(x){ data.frame(mean = mean(x),var = var(x),asm = asm(x),exc = exc(x))}
init <- function(){
AnnualDiameter<<-as.data.frame(read.csv("annual-diameter-of-skirt-at-hem-.csv",col.names = c("AnnualDiameter")));
#a.	сгенерировать выборку длины 1000 из данного распределения (стр. 19)
n <- 1000;
propG = list(shape = 10, rate = 5.3);
propN = list(mean = 2.3, sd = 0.3);
propNB = list(size = 32,prob = 1/5);
rG <<- rgamma(n = n, shape = 10, rate = 5.3);
rN <<- rnorm(n = n, mean = 2.3, sd = 0.3);
rNB <<- rnbinom(n = n, size = 32,prob = 1/5);
distributions <<- list(rG=rG,rN=rN,rNB=rNB)
#   значения функции распределения в точке x
funP <<- list(G = {function(x){ pgamma(q = x, shape = 10, rate = 5.3);}},
N = {function(x){ pnorm(q = x, mean = 2.3, sd = 0.3);}},
NB = {function(x){ pnbinom(q = x, size = 32,prob = 1/5);}}
);
}
init();
plot.ecdf(AnnualDiameter$AnnualDiameter,col.01line = "red",col="green",main = "Empirical Plot AnnualDiameter");
hist(AnnualDiameter$AnnualDiameter,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Темпиратура",
ylab = "Плотность вероятности",
main = "Гистограмма, с кривой плотности Темпиратуры"
);
AnnualDiameterProp <- allProp(AnnualDiameter$AnnualDiameter);
write.csv(AnnualDiameterProp,file = "AnnualDiameterProp.csv")
lapply(distributions,FUN = empiricalPlot)
ranges <- list(G = (((range(rG)[1]*100):(range(rG)[2]*100))/100),
N = (((range(rN)[1]*100):(range(rN)[2]*100))/100),
NB = range(rNB)[1]:range(rNB)[2]
);
densitys <- list(G = dgamma(x = ranges$G,
shape = 10, rate = 5.3),
N = dnorm(x = ranges$N,
mean = 2.3, sd = 0.3),
NB = dnbinom(x = ranges$NB,
size = 32,prob = 1/5))
hist3 <- function(){
{
hist(rG,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rG Гистограмма, с кривой плотности"
);
lines(density(rG), col = "red", lwd = 2);
lines(x = ranges$G, y = densitys$G, col = "green", lwd = 2);
}
{
hist(rN,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rN Гистограмма, с кривой плотности"
);
lines(density(rN), col = "red", lwd = 2);
lines(x = ranges$N, y = densitys$N, col = "green", lwd = 2);
}
{
hist(rNB,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "NB Гистограмма, с кривой плотности"
);
lines(density(rNB), col = "red", lwd = 2);
lines(x = ranges$NB, y = densitys$NB, col = "green", lwd = 2);
}
}
hist3();
realProp = sapply(distributions,allProp)
expectedProp = t(rbind(rG = c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634)))
deltaProp = realProp - expectedProp
realProp
expectedProp
realProp - expectedProp
deltaProp = c(realProp) - c(expectedProp)
cor(realProp, expectedProp)
rchisq(realProp, expectedProp)
realProp
cor(realProp, expectedProp)
с(realProp)
c(realProp)
chisq.test(c(realProp), c(expectedProp))
as.vector(realProp)
as.vector(c(realProp))
matrix(realProp)
deltaProp =  matrix(realProp) -  matrix(expectedProp)
distributionsProp = sapply(distributions,allProp)
distributionsProp = sapply(distributions,allProp)
distributionsProp
distributionsProp["rG"]
distributionsProp["rG",]
distributionsProp["rG"][]
distributionsProp[,1]
distributionsProp = sapply(distributions,allProp)
deltaProp = t(rbind(rG = distributionsProp[,1] - c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = distributionsProp[,2] - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = distributionsProp[,3] - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634)))
distributionsProp[,2]
c(distributionsProp[,2])
as.vector(distributionsProp[,2])
vector(distributionsProp[,2])
c(distributionsProp[,2])
matrix(distributionsProp[,2])
deltaProp = t(rbind(rG = distributionsProp[,1] - c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = matrix(distributionsProp[,2]) - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = distributionsProp[,3] - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634)))
matrix(distributionsProp[,2]) - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277)
c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277)
typeof(c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277))
typeof(c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277))
s=c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277)
s
typeof(s)
as.matrix(distributionsProp[,2])
as.matrix(t(distributionsProp[,2]))
distributionsProp = t(sapply(distributions,allProp))
distributionsProp
distributionsProp[,1]
distributionsProp[1,]
as.matrix(distributionsProp[2,])
deltaProp = rbind(rG = as.matrix(t(distributionsProp[1,]))  - c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = as.matrix(t(distributionsProp[2,])) - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = as.matrix(t(distributionsProp[3,]))  - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
as.matrix(t(distributionsProp[1,]))
t(distributionsProp[1,])
c(t(distributionsProp[1,]))
as.vector(t(distributionsProp[1,]))
distributions
distributionsProp = t(sapply(distributions,allProp))
deltaProp = rbind(rG = allProp(rG)  - c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = allProp(rN) - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = allProp(rNB)  - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
deltaProp
distributionsProp
funP
ranges$G
ranges
sapply(sapply(ranges,funP$G),allProp)
list(funP$G(ranges$G),funP$N(ranges$N),funP$NB(ranges$N))
sapply(G = list(funP$G(ranges$G),N = funP$N(ranges$N),NB = funP$NB(ranges$N)),allProp)
sapply(list(G = funP$G(ranges$G),N = funP$N(ranges$N),NB = funP$NB(ranges$N)),allProp)
means
sapply(list(G = funP$G(ranges$G),N = funP$N(ranges$N),NB = funP$NB(ranges$N)),allProp)
means
distributionsProp = t(sapply(distributions,allProp))
distributionsProp
distributionsProp = sapply(distributions,allProp)
distributionsProp
sapply(list(G = funP$G(ranges$G),N = funP$N(ranges$N),NB = funP$NB(ranges$N)),allProp)
distributionsProp = sapply(distributions,allProp)
distributions
sapply(list(G = funP$G(ranges$G),N = funP$N(ranges$N),NB = funP$NB(ranges$N)),allProp)
distributionsProp = sapply(distributions,allProp)
distributionsProp
x = 1000
pgamma(q = x, shape = 10, rate = 5.3);
ranges
funP
funP$G(rG)
sapply(list(G = funP$G(rG),N = funP$N(rN),NB = funP$NB(rN)),allProp)
distributionsProp
funP
distributionsProp = sapply(distributions,allProp)
expectedProp = rbind(rG =  c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN =  c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB =  c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
distributionsProp
expectedProp
distributionsProp = t(sapply(distributions,allProp))
rbind(distributionsProp,expectedProp)
library(dplyr)
library(tidyr)
library(xtable)
library(ggvis)
library(ggplot2)
set.seed(100);
options(scipen = 0, digits = 3)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE,fig.path = "README_figs/README-")
rbind(propG,propN,propNB)
sapply(distributions,summary)
hist3();
lapply(distributions,FUN = empiricalPlot)
lapply(distributions,FUN = plot.ecdf) = NULL
lapply(distributions,FUN = plot.ecdf)
lapply(distributions,FUN = plot.ecdf,col.01line = "red",col="green")
#b. построить по данной выборке эмпирическую функцию распределения;
ww = lapply(distributions,FUN = plot.ecdf,col.01line = "red",col="green")
AnnualDiameter
AnnualDiameter$AnnualDiameter
var(AnnualDiameter$AnnualDiameter)
exc<<-function(x){
sum((x-mean(x))^4)/length(x)/var(x)^2-3;
}
asm <<- function(x){
sum((x-mean(x))^3)/length(x)/var(x)^(3/2)
}
allProp <<- function(x){ data.frame(mean = mean(x),var = var(x),asm = asm(x),exc = exc(x))}
AnnualDiameter<<-as.data.frame(read.csv("annual-diameter-of-skirt-at-hem-.csv",col.names = c("AnnualDiameter")));
n = 1000;
propG = list(shape = 10, rate = 5.3);
propN = list(mean = 2.3, sd = 0.3);
propNB = list(size = 32,prob = 1/5);
rN = rnorm(n = n, mean = 2.3, sd = 0.3);
rNB = rnbinom(n = n, size = 32,prob = 1/5);
distributions = list(rG=rG,rN=rN,rNB=rNB);
hist(AnnualDiameter$AnnualDiameter,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Темпиратура",
ylab = "Плотность вероятности",
main = "Гистограмма, с кривой плотности Темпиратуры"
);
write.csv(AnnualDiameterProp,file = "AnnualDiameterProp.csv")
lapply(distributions,FUN = plot.ecdf,col.01line = "red",col="green")
ranges <- list(G = (((range(rG)[1]*100):(range(rG)[2]*100))/100),
N = (((range(rN)[1]*100):(range(rN)[2]*100))/100),
NB = range(rNB)[1]:range(rNB)[2]
);
densitys <- list(G = dgamma(x = ranges$G,
shape = 10, rate = 5.3),
N = dnorm(x = ranges$N,
mean = 2.3, sd = 0.3),
NB = dnbinom(x = ranges$NB,
size = 32,prob = 1/5))
hist3();
distributionsProp = t(sapply(distributions,allProp))
expectedProp = rbind(rG =  c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN =  c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB =  c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
deltaProp = rbind(rG = allProp(rG)  - c(mean = propG$shape/propG$rate, var= propG$shape/propG$rate^2,asm = 0.5332323,exc = 0.38232323),
rN = allProp(rN) - c(mean = propN$mean, var= propN$sd^2,asm = 0.05003010,exc = 0.019126277),
rNB = allProp(rNB)  - c(mean = 128.424362, var= 574.8357284,asm = 0.242437444,exc = 0.3282478634))
plot.ecdf(AnnualDiameter$AnnualDiameter,col.01line = "red",col="green",main = "Empirical Plot AnnualDiameter");
rG = rgamma(n = n, shape = 10, rate = 5.3);
AnnualDiameterProp <- allProp(AnnualDiameter$AnnualDiameter);
hist3 <- function(){
{
hist(rG,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rG Гистограмма, с кривой плотности"
);
lines(density(rG), col = "red", lwd = 2);
lines(x = ranges$G, y = densitys$G, col = "green", lwd = 2);
}
{
hist(rN,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "rN Гистограмма, с кривой плотности"
);
lines(density(rN), col = "red", lwd = 2);
lines(x = ranges$N, y = densitys$N, col = "green", lwd = 2);
}
{
hist(rNB,
breaks = 20,
freq = F,
col = "lightblue",
xlab = "Диаметр юбки",
ylab = "Плотность вероятности",
main = "NB Гистограмма, с кривой плотности"
);
lines(density(rNB), col = "red", lwd = 2);
lines(x = ranges$NB, y = densitys$NB, col = "green", lwd = 2);
}
}
set.seed(100);
write.csv(distributionsProp,file = "tProp.csv")
